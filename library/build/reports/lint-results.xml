<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 3.0.0">

    <issue
        id="CustomViewStyleable"
        severity="Warning"
        message="By convention, the custom view (`PullToRefreshBase`) and the declare-styleable (`PullToRefresh`) should have the same name (various editor features rely on this convention)"
        category="Correctness"
        priority="6"
        summary="Mismatched Styleable/Custom View Name"
        explanation="The convention for custom views is to use a `declare-styleable` whose name matches the custom view class name. The IDE relies on this convention such that for example code completion can be offered for attributes in a custom view in layout XML resource files.&#xA;&#xA;(Similarly, layout parameter classes should use the suffix `_Layout`.)"
        errorLine1="    ViewGroup.LayoutParams.MATCH_PARENT);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshBase.java"
            line="1055"
            column="17"/>
    </issue>

    <issue
        id="LocaleFolder"
        severity="Warning"
        message="The locale folder &quot;`he`&quot; should be called &quot;`iw`&quot; instead; see the `java.util.Locale` documentation"
        category="Correctness"
        priority="6"
        summary="Wrong locale name"
        explanation="From the `java.util.Locale` documentation:&#xA;&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;) language code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish (&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.&#xA;&#xA;Because of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.&#xA;&#xA;To work around this, place your resources in a `values` folder using the deprecated language code instead."
        url="http://developer.android.com/reference/java/util/Locale.html"
        urls="http://developer.android.com/reference/java/util/Locale.html">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\values-he"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility &#xA;modes apply. Consider testing and updating this version. &#xA;Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 28"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="F:\qianyan\qianyan\library\build.gradle"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `versionCode` value (`2110`) is not used; it is always overridden by the value specified in the Gradle build script (`1`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    android:versionCode=&quot;2110&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\AndroidManifest.xml"
            line="4"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `versionName` value (`2.1.1`) is not used; it is always overridden by the value specified in the Gradle build script (`1.0`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    android:versionName=&quot;2.1.1&quot; >"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\AndroidManifest.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `minSdkVersion` value (`4`) is not used; it is always overridden by the value specified in the Gradle build script (`16`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="    &lt;uses-sdk android:minSdkVersion=&quot;4&quot; />"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\AndroidManifest.xml"
            line="7"
            column="15"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pull_to_refresh_from_bottom_pull_label`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;cs&quot; (Czech), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;he&quot; (Hebrew), &quot;it&quot; (Italian), &quot;iw&quot; (Hebrew), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;zh&quot; (Chinese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pull_to_refresh_from_bottom_pull_label&quot;>@string/pull_to_refresh_pull_label&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\values\pull_refresh_strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pull_to_refresh_from_bottom_release_label`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;cs&quot; (Czech), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;he&quot; (Hebrew), &quot;it&quot; (Italian), &quot;iw&quot; (Hebrew), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;zh&quot; (Chinese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pull_to_refresh_from_bottom_release_label&quot;>@string/pull_to_refresh_release_label&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\values\pull_refresh_strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`pull_to_refresh_from_bottom_refreshing_label`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;cs&quot; (Czech), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;he&quot; (Hebrew), &quot;it&quot; (Italian), &quot;iw&quot; (Hebrew), &quot;ja&quot; (Japanese), &quot;ko&quot; (Korean), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt&quot; (Portuguese), &quot;pt-BR&quot; (Portuguese: Brazil), &quot;ro&quot; (Romanian), &quot;ru&quot; (Russian), &quot;zh&quot; (Chinese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;pull_to_refresh_from_bottom_refreshing_label&quot;>@string/pull_to_refresh_refreshing_label&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\values\pull_refresh_strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="AddJavascriptInterface"
        severity="Warning"
        message="`WebView.addJavascriptInterface` should not be called with minSdkVersion &lt; 17 for security reasons: JavaScript can use reflection to manipulate application"
        category="Security"
        priority="9"
        summary="addJavascriptInterface Called"
        explanation="For applications built for API levels below 17, `WebView#addJavascriptInterface` presents a \&#xA;security hazard as JavaScript on the target web page has the ability to use reflection to access \&#xA;the injected object&apos;s public fields and thus manipulate the host application in unintended ways."
        url="https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/"
        urls="https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/"
        errorLine1="  // Need to add JS Interface so we can get the response back"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\extras\PullToRefreshWebView2.java"
            line="88"
            column="25"/>
    </issue>

    <issue
        id="JavascriptInterface"
        severity="Error"
        message="None of the methods in the added interface (JsValueCallback) have been annotated with `@android.webkit.JavascriptInterface`; they will not be visible in API 17"
        category="Security"
        priority="8"
        summary="Missing @JavascriptInterface on methods"
        explanation="As of API 17, you must annotate methods in objects registered with the `addJavascriptInterface` method with a `@JavascriptInterface` annotation."
        url="http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)"
        urls="http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)"
        errorLine1="  // Need to add JS Interface so we can get the response back"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\extras\PullToRefreshWebView2.java"
            line="88"
            column="25"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="  return !isScrollingWhileRefreshingEnabled();"
        errorLine2="                                 ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshBase.java"
            line="201"
            column="34"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" protected ExpandableListView createRefreshableView(Context context, AttributeSet attrs) {"
        errorLine2="                                                                             ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshExpandableListView.java"
            line="52"
            column="78"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" protected final GridView createRefreshableView(Context context, AttributeSet attrs) {"
        errorLine2="                                                               ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshGridView.java"
            line="52"
            column="64"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" protected HorizontalScrollView createRefreshableView(Context context, AttributeSet attrs) {"
        errorLine2="                                                                                      ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshHorizontalScrollView.java"
            line="50"
            column="87"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="   if (includeEnd &amp;&amp; mode.showFooterLoadingLayout()) {"
        errorLine2="                               ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshListView.java"
            line="197"
            column="32"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" protected ScrollView createRefreshableView(Context context, AttributeSet attrs) {"
        errorLine2="                                                                 ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshScrollView.java"
            line="50"
            column="66"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" protected WebView createRefreshableView(Context context, AttributeSet attrs) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshWebView.java"
            line="95"
            column="12"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 16"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1=" public static void setLayerType(View view, int layerType) {"
        errorLine2="                         ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\internal\ViewCompat.java"
            line="43"
            column="26"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src\\main\\res`: drawable-xxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="F:\qianyan\qianyan\library\src\main\res"/>
    </issue>

    <issue
        id="ViewConstructor"
        severity="Warning"
        message="Custom view `RotateLoadingLayout` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        category="Usability"
        priority="3"
        summary="Missing View constructors for XML inflation"
        explanation="Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:&#xA;* `View(Context context)`&#xA;* `View(Context context, AttributeSet attrs)`&#xA;* `View(Context context, AttributeSet attrs, int defStyle)`&#xA;&#xA;If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor."
        errorLine1="import com.handmark.pulltorefresh.library.R;"
        errorLine2="                                ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\internal\RotateLoadingLayout.java"
            line="28"
            column="33"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\layout\pull_to_refresh_header_horizontal.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageView"
        errorLine2="            ^"
        quickfix="studio">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\layout\pull_to_refresh_header_vertical.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.START`&quot; instead of &quot;`Gravity.LEFT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   case PULL_FROM_END:"
        errorLine2="              ~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\internal\LoadingLayout.java"
            line="91"
            column="15"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.END`&quot; instead of &quot;`Gravity.RIGHT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   case PULL_FROM_START:"
        errorLine2="                      ^">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\internal\LoadingLayout.java"
            line="100"
            column="23"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.END`&quot; instead of &quot;`Gravity.RIGHT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   mIndicatorIvTop = new IndicatorLayout(getContext(), Mode.PULL_FROM_START);"
        errorLine2="                      ~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshAdapterViewBase.java"
            line="340"
            column="23"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.END`&quot; instead of &quot;`Gravity.RIGHT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="   mIndicatorIvBottom = new IndicatorLayout(getContext(), Mode.PULL_FROM_END);"
        errorLine2="           ~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\java\com\handmark\pulltorefresh\library\PullToRefreshAdapterViewBase.java"
            line="355"
            column="12"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_gravity=&quot;left|center_vertical&quot; >"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\qianyan\qianyan\library\src\main\res\layout\pull_to_refresh_header_vertical.xml"
            line="16"
            column="37"/>
    </issue>

</issues>
